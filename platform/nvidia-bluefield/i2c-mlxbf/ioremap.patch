diff --git a/i2c-mlxbf.c b/i2c-mlxbf.c
index 05c3025..6fdd865 100644
--- a/i2c-mlxbf.c
+++ b/i2c-mlxbf.c
@@ -20,6 +20,8 @@
 #include <linux/acpi.h>
 #include <linux/mutex.h>
 
+#include <linux/version.h>
+
 /* Defines what functionality is present */
 #define MLX_I2C_FUNC_SMBUS_BLOCK \
 	(I2C_FUNC_SMBUS_BLOCK_DATA | I2C_FUNC_SMBUS_BLOCK_PROC_CALL)
@@ -1396,7 +1398,11 @@ static int mlx_i2c_get_gpio(struct platform_device *pdev,
 	if (!devm_request_mem_region(dev, params->start, size, params->name))
 		return -EFAULT;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 9, 0)
+	gpio_res->io = devm_ioremap(dev, params->start, size);
+#else
 	gpio_res->io = devm_ioremap_nocache(dev, params->start, size);
+#endif
 	if (IS_ERR(gpio_res->io)) {
 		devm_release_mem_region(dev, params->start, size);
 		return PTR_ERR(gpio_res->io);
@@ -1460,7 +1466,11 @@ static int mlx_i2c_get_corepll(struct platform_device *pdev,
 	if (!devm_request_mem_region(dev, params->start, size, params->name))
 		return -EFAULT;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 9, 0)
+	corepll_res->io = devm_ioremap(dev, params->start, size);
+#else
 	corepll_res->io = devm_ioremap_nocache(dev, params->start, size);
+#endif
 	if (IS_ERR(corepll_res->io)) {
 		devm_release_mem_region(dev, params->start, size);
 		return PTR_ERR(corepll_res->io);
@@ -1813,7 +1823,11 @@ static int mlx_i2c_init_coalesce(struct platform_device *pdev,
 		if (!request_mem_region(params->start, size, params->name))
 			return -EFAULT;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 6, 0)
+		coalesce_res->io = ioremap(params->start, size);
+#else
 		coalesce_res->io = ioremap_nocache(params->start, size);
+#endif
 		if (IS_ERR(coalesce_res->io)) {
 			release_mem_region(params->start, size);
 			return PTR_ERR(coalesce_res->io);
